name: Deploy CloudFormation Stack - Application

on:
  push:
    branches:
      - main

#on:
#    workflow_dispatch:

env:
  AWS_REGION: us-east-1
  ENV_NAME: dev
  PARAMS_FILE: aws-cloudformation/parameters/dev.json
  ECS_SERVICE_TEMPLATE: aws-cloudformation/templates/aws-ecs-service.yaml
  ECS_TD_TEMPLATE: aws-cloudformation/templates/aws-ecs-taskdefinition.yaml
  

jobs:
  call_infra:
    uses: ./.github/workflows/deploy-infra.yml
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    with:
      aws-region: us-east-1

  deploy_ecs_td:
    runs-on: ubuntu-latest
    needs: call_infra
    outputs:
      TaskDefinitionId: ${{ steps.ecs-taskdefinition.outputs.TaskDefinitionId }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Configure AWS Credentials
        uses: ./.github/actions/aws-config
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}            
      - name: Deploy CloudFormation Stack - ECS Task Definition
        id: ecs-taskdefinition
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_REGION: ${{ env.AWS_REGION }}
          EcrRepositoryName: ${{ needs.call_infra.outputs.EcrRepositoryName }}
        uses: ./.github/actions/deploy-cf-stack
        with:
          stack-name: ${{ env.ENV_NAME }}-ecs-taskdefinition
          template-file: ${{ env.ECS_TD_TEMPLATE }}
          params-file: ${{ env.PARAMS_FILE }}
          extra-params: |
            LogGroupId=${{ needs.call_infra.outputs.LogGroupId }}
            EcsRoleArn=${{ needs.call_infra.outputs.EcsRoleArn }}
            ContainerImage=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${EcrRepositoryName}:latest
          output-keys: TaskDefinitionId


  deploy_ecs-service:
    runs-on: ubuntu-latest
    needs: [call_infra, deploy_ecs_td]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Configure AWS Credentials
        uses: ./.github/actions/aws-config
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Output TD ID
        run: echo "${{ needs.deploy_ecs_td.outputs.TaskDefinitionId }}"
      - name: Deploy CloudFormation Stack - ECS Service
        id: ecs-service
        env:
          TaskDef_Id: ${{ needs.deploy_ecs_td.outputs.TaskDefinitionId }}
        uses: ./.github/actions/deploy-cf-stack
        with:
          stack-name: ${{ env.ENV_NAME }}-ecs-service
          template-file: ${{ env.ECS_SERVICE_TEMPLATE }}
          params-file: ${{ env.PARAMS_FILE }}
          extra-params: |
            TaskDefinitionId=${TaskDef_Id}
            ECSClusterId=${{ needs.call_infra.outputs.ECSClusterId }}
            AppLoadBalancerTargetGroupId=${{ needs.call_infra.outputs.AppLoadBalancerTargetGroupId }}
            PrivateSubnetId1=${{ needs.call_infra.outputs.PrivateSubnetId1 }}
            PrivateSubnetId2=${{ needs.call_infra.outputs.PrivateSubnetId2 }}
            SecurityGroupEcsId=${{ needs.call_infra.outputs.SecurityGroupEcsId }}    